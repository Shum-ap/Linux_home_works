'''Числа кратные 3 или 5
Напишите программу, которая создает множество из чисел, фильтруя элементы, не кратные 3 или 5.
Данные:
numbers = [16, 18, 1, 6, 3, 2, 6, 2, 14, 3, 20, 15, 19, 4, 18, 15, 15, 4, 20, 18]
Пример вывода:
{3, 6, 15, 18, 20}'''

numbers = [16, 18, 1, 6, 3, 2, 6, 2, 14, 3, 20, 15, 19, 4, 18, 15, 15, 4, 20, 18]

result = {num for num in numbers if num % 3 == 0 or num % 5 == 0}

print(result)


'''Проверка уникальности ключей
Напишите программу, которая проверяет, содержатся ли в двух заданных словарях одинаковые ключи.
Вывести одинаковые ключи или "-", если таковых нет.
Данные:
dict1 = {"a": 1, "b": 2, "c": 3}
dict2 = {"b": 5, "d": 7, "a": 8}
Пример вывода:
Общие ключи: ['a', 'b']'''

dict1 = {"a": 1, "b": 2, "c": 3}
dict2 = {"b": 5, "d": 7, "a": 8}

common_keys = list(dict1.keys() & dict2.keys())

if common_keys:
    print("Общие ключи:", common_keys)
else:
    print("-")
''''''
dict1 = {"a": 1, "b": 2, "c": 3}
dict2 = {"b": 5, "d": 7, "a": 8}
result = []
for key in dict1.keys():
    if key in dict2.keys():
        result.append(key)
print('Общие ключи:', result)

'''Строки с длиной
Напишите программу, которая преобразует список строк в словарь, где ключи — сами строки, а значения —
их длины.
Данные:
words = ["apple", "banana", "cherry", "date"]
Пример вывода:
{'apple': 5, 'banana': 6, 'cherry': 6, 'date': 4}'''

words = ["apple", "banana", "cherry", "date"]
novoe = {word: len(word) for word in words}
print(novoe)

'''Проверка подмножества
Напишите программу, которая проверяет, является ли один словарь подмножеством другого (т.е. все его пары
"ключ-значение" содержатся в другом словаре).
Данные:
dict1 = {"a": 1, "b": 2}
dict2 = {"a": 1, "b": 2, "c": 3}
Пример вывода:
Первый словарь является подмножеством второго.'''

dict1 = {"a": 1, "b": 2}
dict2 = {"a": 1, "b": 2, "c": 3}

if dict1.items() <= dict2.items():
    print("Первый словарь является подмножеством второго.")
else:
    print("Первый словарь не является подмножеством второго.")

'''Удаление пустых значений
Напишите программу, которая удаляет из словаря все пары "ключ-значение", где значение пустое (например,
None, пустая строка или пустой список).
Данные:
data = {"a": None, "b": 2, "c": "", "d": [], "e": [1, 2]}
Пример вывода:
{'b': 2, 'e': [1, 2]}'''

data = {"a": None, "b": 2, "c": "", "d": [], "e": [1, 2]}

filtered_data = {k: v for k, v in data.items() if v}

print(filtered_data)

''''''
data = {"a": None, "b": 2, "c": "", "d": [], "e": [1, 2]}

for key in list(data.keys()):
    if data[key] in (None, "" ,[]):
        data.pop(key)

print(data)

'''База оценок студентов
У вас есть словарь с именами студентов и списками их оценок. Напишите программу, которая вычисляет
средний балл для каждого студента. Далее нужно сохранить средний балл в значениях для каждого студента,
как показано на примере.
Данные:
grades = {
 "anna": [5, 4, 3, 5],
 "bennet": [3, 2, 4],
 "john": [5, 5, 5]
}
Пример вывода:
{'anna': {'оценки': [5, 4, 3, 5], 'средний балл': 4.25}, 'bennet': {'оценки': [3, 2, 4], 'средний балл': 3.0},
'john': {'оценки': [5, 5, 5], 'средний балл': 5.0}}'''

grades = {
    "anna": [5, 4, 3, 5],
    "bennet": [3, 2, 4],
    "john": [5, 5, 5]
}

result = {}

for student, marks in grades.items():
    average = sum(marks) / len(marks)
    result[student] = {
        "оценки": marks,
        "средний балл": average
    }

print(result)

'''Рецепты по ингредиентам
Создайте словарь, в котором для каждого набора ингредиентов будут храниться все названия рецептов.
Учитывайте что ингредиенты могут быть перечислены в произвольном порядке и некоторые рецепты могут
иметь одинаковые ингредиенты.
Выведите возможные рецепты для каждого набора продуктов.
В конце пользователь вводит список имеющихся у него ингредиентов через пробел, и программа должна
вывести названия всех доступных рецептов. Если рецептов нет, нужно вывести сообщение "Нет рецептов".
Задание 8
Данные:
recipes = {
 ("flour", "egg", "milk"): "Pancakes",
 ("egg", "milk", "butter"): "Omelette",
 ("flour", "sugar", "butter"): "Cookies",
 ("flour", "egg", "butter", "sugar"): "Cake",
 ("milk", "flour", "egg"): "Waffles",
 ("butter", "milk", "egg"): "Scrambled Eggs",
 ("flour", "milk", "sugar", "butter"): "Sweet Bread"
}
Пример вывода:
milk egg butter flour'''


'''Потерянные страницы книги
Вам дан словарь, где ключи — номера страниц книги, а значения — содержимое страниц. Некоторые
страницы отсутствуют (значения None). Напишите программу, которая на пропущенных страницах заменит
значение на "Страница потеряна".
Данные:
book = {1: "Начало истории", 2: None, 3: "Глава 1", 4: None, 5: "Глава 2"}
Пример вывода:
Введите размер координатной сетки: 3
Координаты: [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]'''

book = {1: "Начало истории", 2: None, 3: "Глава 1", 4: None, 5: "Глава 2"}

# Обновляем значения, где содержимое None
for page, content in book.items():
    if content is None:
        book[page] = "Страница потеряна"

print(book)
