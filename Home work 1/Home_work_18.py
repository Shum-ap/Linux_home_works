'''Не уникальные числа
Напишите программу, которая находит все числа, встречающиеся более одного раза в списке,
 и выводит их в порядке убывания.
Данные:
numbers = [4, 7, 3, 7, 8, 3, 4, 2, 7, 3, 8, 4]
Пример вывода:
Числа, встречающиеся более одного раза: [8, 7, 4, 3]
'''

numbers = [4, 7, 3, 7, 8, 3, 4, 2, 7, 3, 8, 4]
rep_numbers = {n for n in numbers if numbers.count(n) > 1}
sort_rep_numbers = sorted(rep_numbers, reverse=True)

print("Числа, встречающиеся более одного раза:", sort_rep_numbers)


'''
Проверка подмножества Задача:
Напишите программу, которая проверяет, является ли один словарь подмножеством другого
(т.е. все его пары "ключ-значение" содержатся в другом словаре).
Данные:
dict1 = {"a": 1, "b": 2}
dict2 = {"a": 1, "b": 2, "c": 3}
Пример вывода:
Первый словарь является подмножеством второго.'''

dict1 = {"a": 1, "b": 2}
dict2 = {"a": 1, "b": 2, "c": 3}

is_subset = True

for key in dict1:
    if key not in dict2 or dict1[key] != dict2[key]:
        is_subset = False
        break

if is_subset:
    print("Первый словарь является подмножеством второго.")
else:
    print("Первый словарь не является подмножеством второго.")
